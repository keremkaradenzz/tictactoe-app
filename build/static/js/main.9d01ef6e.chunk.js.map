{"version":3,"sources":["components/ResultGame.jsx","components/GameBoard.jsx","components/Reset.jsx","App.js","index.js"],"names":["ResultGame","playerResult","value","movementPlayer","player","useState","shows","setShow","winningArrays","counter","i","Number","j","newArr","push","leftDiagonal","rightDiagonal","k","winnigX","winnigO","draw","winnigNumbers","length","map","item","useEffect","indexOf","document","getElementById","setAttribute","style","backgroundColor","innerHTML","playAgain","window","location","reload","console","log","id","className","onClick","index","split","reverse","join","GameBoard","setValue","setPlayer","Array","Math","pow","fill","squares","setSquares","buttonArrays","sData","movement","whoPlay","axios","post","body","then","response","catch","error","handleClick","e","x","y","row","column","createGameBoard","type","onChange","target","alert","min","max","slice","Reset","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.9d01ef6e.chunk.js","sourcesContent":["import React,{useState,useEffect}from \"react\";\n\nconst ResultGame = ({ playerResult, value,movementPlayer , player }) => {\n  // winning nummers\n  const [shows,setShow] = useState(true)\n  let winningArrays = [];\n  let counter = 0;\n  //selected all rows\n  for (let i = 0; i < Number(value); i++) {\n    winningArrays[i] = [];\n    for (let j = 0; j < Number(value); j++) {\n      winningArrays[i][j] = counter;\n      counter++;\n    }\n  }\n  let newArr = [...winningArrays]; \n\n  counter = 0;\n  // selected all column\n  for (let i = 0; i < value; i++) {\n    winningArrays[i] = [];\n    for (let j = 0; j < Number(value); j++) {\n      winningArrays[i][j] = i + counter;\n      counter = counter + Number(value);\n    }\n    counter = 0;\n  }\n  newArr.push(...winningArrays);\n\n  //selected left diagonal\n  let leftDiagonal = [[]];\n  for (let j = 0; j < Number(value); j++) {\n    counter = counter + (Number(value) - 1);\n    leftDiagonal[0][j] = 0 + counter;\n  }\n  counter = 0;\n  let rightDiagonal = [[]];\n  //selected right diagonal\n  for (let k = 0; k < Number(value); k++) {\n    rightDiagonal[0][k] = counter;\n    counter = counter + (Number(value) + 1);\n  }\n  newArr.push(...leftDiagonal, ...rightDiagonal);\n\n  // calculate winnig player\n  let winnigX = 0;              \n  let winnigO = 0;\n  let draw = 0;\n  let winnigNumbers=[];\n  for (let i = 0; i < newArr.length; i++) {\n    winnigX = 0;\n    winnigO = 0;\n    newArr[i].map((item) => {     // winning number array search\n      if (playerResult[item] === \"X\") {\n        winnigX++;\n      } else if (playerResult[item] === \"O\") {\n        winnigO++;\n      }\n    });\n    if (winnigX === Number(value)) {\n      winnigNumbers = newArr[i]; \n    \n      break;\n    } else if (winnigO === Number(value)) {\n      winnigNumbers = newArr[i];\n   \n      break;\n    }\n  }\n  useEffect(()=>{\n    if(playerResult.indexOf(null) === -1)\n    {\n      for(let k = 0 ; k < movementPlayer.length ; k++) // true numbers is disabled\n      {\n        document.getElementById(`${k}`).setAttribute(\"disabled\", \"\");\n      }\n      setShow(false); \n    }\n    for(let i = 0 ; i< winnigNumbers.length ; i++)  // true numbers is bgcolor green\n    {\n      document.getElementById(`${winnigNumbers[i]}`).style.backgroundColor=\"green\";\n      setShow(false); \n\n    }\n    if(winnigNumbers.length>0)\n    {\n      for(let k = 0 ; k < movementPlayer.length ; k++) // true numbers is disabled\n      {\n        document.getElementById(`${k}`).setAttribute(\"disabled\", \"\");\n      }\n    }\n    if(!shows)\n    {\n      document.getElementById(\"next-player\").innerHTML=\"\";\n    }\n    \n  })\n \n  // calculate draw game\n  if (playerResult.indexOf(null) === -1) {\n    draw++;\n  }\n\n  const playAgain = () => window.location.reload();  \n  console.log(movementPlayer);\n  console.log(playerResult);\n  return (\n    <>\n      {player ?(\n        <p id=\"next-player\" className=\"fs-3 \">Next Player X</p>\n      ) : (\n        <p   id=\"next-player\" className=\"fs-3\">Next Player O</p>\n      )}\n      <p className=\"fs-4 fsw-bold\">Result Game</p>\n      {winnigX === Number(value) ?  (\n       \n        <p>winner X  <button className=\"btn btn-success \" onClick={playAgain}>\n        Play Again\n      </button> </p>\n        \n      ) : winnigO ===  Number(value) ? (\n        <p>winner O  <button className=\"btn btn-success \" onClick={playAgain}>\n        Play Again\n      </button></p>\n      ) : draw > 0 ? (\n        <p> draw </p>\n      ) : (\n        \"\"\n      )}\n      {draw > 0 ? (\n        <button className=\"btn btn-success \" onClick={playAgain}>\n          Play Again\n        </button>\n      ) : (\n        \"\"\n      )}\n      <ul>\n        <li>1. Game Start! (Player X Begins) // First action is starting the game and Player X begins</li>\n        {  playerResult.map((item,index) => \n             item!==null ? <li>Move triggered ({item}) {movementPlayer[index].split(',').reverse().join(',')} //  ({item}) letter placed on the {movementPlayer[index].split(',').reverse().join(',')} location of the board</li> : \"\"\n        )}\n          {winnigX === Number(value) ? (\n        <li>Game Finshed! (Player X Winner)</li>\n      ) : winnigO ===  Number(value) ? (\n        <li>Game Finshed! (Player O Winner)</li>\n      ) : draw > 0 ? (\n        <li> Game Finshed! (Draw)</li>\n      ) : (\n        \"\"\n      )}\n      </ul>\n    </>\n  );\n};\n\nexport default ResultGame;\n","import React, { useState } from \"react\";\nimport ResultGame from \"./ResultGame\";\nimport axios from \"axios\";\nconst GameBoard = () => {\n  const [value, setValue] = useState(3); // NxN tic tac toe board size\n  const [player, setPlayer] = useState(true); // true player X false player O\n  const [squares, setSquares] = useState(Array(Math.pow(value,2)).fill(null)); // created item = fill array\n\n  const URL = \"http://140.82.59.206/gameLogger.php/\"; // POST URL\n\n  // Created Game Board\n  let buttonArrays = [];\n  const createGameBoard = (x, y) => {\n    for (let row = 1; row <= x; row++) {\n      //row\n      for (let column = 1; column <= y; column++) {\n        // column\n        buttonArrays.push(`${row},${column}`);\n      }\n    }\n\n    return buttonArrays;\n  };\n  // sending data \n  const sData = function sendData(movement,whoPlay){(\n    axios.post(URL, {\n        body: {\n          'action': `Move triggered (${whoPlay}) (${movement})`\n        },\n      })\n      .then(function (response) {\n        console.log(response);\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n    )}\n  const handleClick = (index, item) => (e) => {\n    let newArr = [...squares]; // copying the old data array\n    if (player) {\n    \n      sData(item.split(',').reverse().join(',')   ,'X')\n      newArr[index] = \"X\";\n      setPlayer(false); // replace  player\n    } else {\n      sData(item.split(',').reverse().join(',')   ,'O')\n      newArr[index] = \"O\";\n      setPlayer(true); // replace  player\n    }\n\n    setSquares(newArr);\n  };\n\n  createGameBoard(value, value); // Created NxN tic tac toe\n  return (\n    <>\n      <div className=\"col-12\">\n        <p className=\"fs-3\">Create NxN Tic Tac Toe (Min 3x3 - Max 6x6)</p>\n        <input\n          type=\"number\"\n          onChange={(e) => e.target.value>= 3 && e.target.value <=6 ? setValue(e.target.value) : window.alert(\"Min 3x3 - Max 6x6\")}\n          min=\"3\" max=\"6\"\n          value={value}\n        ></input>\n       \n      </div>\n      <br />\n      {buttonArrays.map((item, index) => {\n        return Math.pow(item.slice(2), 2) === buttonArrays.length ? (\n          <span>\n            <button\n              key={index}\n              id={index}\n        \n              className=\"btn btn-primary squares\"\n              onClick={handleClick(index, item)}\n              value={squares[index]}\n            >\n             {squares[index]}\n            </button>\n            <br />\n          </span>\n        ) : (\n          <button\n            key={index}\n            id={index}\n           \n            className=\"btn btn-primary squares\"\n            onClick={handleClick(index, item)}\n            value={squares[index]}\n          >\n            {squares[index]}\n          </button>\n        );\n      })}\n      \n      <ResultGame\n        playerResult={squares}\n        value={value}\n        movementPlayer = {buttonArrays}\n        player = {player}\n      />\n      \n    </>\n  );\n};\n\nexport default GameBoard;\n","import React from 'react';\n\n \n//Create Reset Game Buttons\nconst Reset = () => {\n\n    const resetGame = () => window.location.reload()\n    return(\n        <div className=\"col-12\">\n            <button className=\"btn btn-primary mt-3  \" onClick={resetGame}>Reset Game</button>\n        </div>\n    )\n\n}\nexport default Reset;","import React from \"react\";\nimport GameBoard from \"./components/GameBoard\";\nimport Reset from \"./components/Reset\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col\">\n          <GameBoard></GameBoard>\n          <Reset></Reset>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}